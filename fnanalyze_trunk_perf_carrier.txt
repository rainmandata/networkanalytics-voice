--DOCUMENTATION: https://github.com/rainmandata/networkanalytics-voice/wiki/Carrier-Trunk-Performance
--SAMPLE EXECUTION: select * from fnanalyze_trunk_perf_carrier('2021-01-01', '2021-01-31 12:00:00');

--DEPENDENCIES
--Table: agg_carrier_signalip_daily - 
--Table: trunk_groups_carrier - https://github.com/rainmandata/networkanalytics-voice/blob/main/tbl_trunk_groups_carrier.txt

--AUGMENTATIONS
--1. 

--DROP FUNCTION fnanalyze_trunk_perf_carrier(timestamp without time zone,timestamp without time zone);

create or replace function fnanalyze_trunk_perf_carrier (
      p_start_datetime timestamp without time zone
	, p_end_datetime timestamp without time zone
) 
returns table ( tg_id text
			   , tg_name text
			   , tg_attempts bigint
			   , tg_completions bigint
			   , tg_asr numeric(5, 2)
			   , trunk_number bigint
			   , signal_ip text
			   , trunk_attempts bigint
			   , trunk_competions bigint
			   , trunk_asr numeric(5, 2)
			   , asr_variance numeric(5, 2)
) 
language plpgsql
as $$
declare 

begin

DROP TABLE IF EXISTS tmp_trunk_perf_per_tg;

CREATE TABLE tmp_trunk_perf_per_tg as
	SELECT agg_carrier_signalip_daily.tg_id
	, sum(agg_carrier_signalip_daily.attempts) as "tg_attempts"
	, sum(agg_carrier_signalip_daily.completions) as "tg_completions"
	, ((sum(agg_carrier_signalip_daily.completions) / sum(agg_carrier_signalip_daily.attempts)::numeric) * 100)::numeric(5, 2) as "tg_asr"
		from agg_carrier_signalip_daily 
	where agg_carrier_signalip_daily.call_time >= p_start_datetime
	and agg_carrier_signalip_daily.call_time <= p_end_datetime
	group by agg_carrier_signalip_daily.tg_id;

RETURN QUERY 
	select tmp_trunk_perf_per_tg.tg_id
	, coalesce(trunk_groups_carrier.tg_name, 'trunk_groups_carrier.tg_name not set.') as tg_name
	, tmp_trunk_perf_per_tg.tg_attempts
	, tmp_trunk_perf_per_tg.tg_completions
	, tmp_trunk_perf_per_tg.tg_asr
	, ROW_NUMBER () OVER (PARTITION BY tmp_trunk_perf_per_tg.tg_id ORDER BY sum(agg_carrier_signalip_daily.attempts) desc)
	, agg_carrier_signalip_daily.signal_ip
	, sum(agg_carrier_signalip_daily.attempts) as "trunk_attempts"
	, sum(agg_carrier_signalip_daily.completions) as "trunk_completions"
	, ((sum(agg_carrier_signalip_daily.completions) / sum(agg_carrier_signalip_daily.attempts)::numeric) * 100)::numeric(5, 2) as "trunk_asr"
	, ((sum(agg_carrier_signalip_daily.completions) / sum(agg_carrier_signalip_daily.attempts)::numeric) * 100)::numeric(5, 2) - tmp_trunk_perf_per_tg.tg_asr as "asr_variance"
from tmp_trunk_perf_per_tg
left outer join trunk_groups_carrier on trunk_groups_carrier.tg_id = tmp_trunk_perf_per_tg.tg_id
inner join agg_carrier_signalip_daily on agg_carrier_signalip_daily.tg_id = tmp_trunk_perf_per_tg.tg_id
	where agg_carrier_signalip_daily.call_time >= p_start_datetime
	and agg_carrier_signalip_daily.call_time <= p_end_datetime
	group by tmp_trunk_perf_per_tg.tg_id
	, coalesce(trunk_groups_carrier.tg_name, 'trunk_groups_carrier.tg_name not set.')
	, tmp_trunk_perf_per_tg.tg_attempts
	, tmp_trunk_perf_per_tg.tg_completions
	, tmp_trunk_perf_per_tg.tg_asr
	, agg_carrier_signalip_daily.signal_ip
	order by tmp_trunk_perf_per_tg.tg_attempts desc
	, sum(agg_carrier_signalip_daily.attempts) desc
	;

end; $$ 